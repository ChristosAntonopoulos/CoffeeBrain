trigger:
  - main

pool:
  vmImage: 'ubuntu-latest'

variables:
  # Build variables
  buildConfiguration: 'Release'
  nodeVersion: '18.x'
  
  # Docker variables
  dockerfilePath: 'Dockerfile'
  imageName: 'coffee-brain'
  imageTag: '$(Build.BuildId)'
  
  # Kubernetes variables
  k8sNamespace: 'coffee-brain'
  k8sConfigPath: 'k8s/'
  
  # Deployment method - change this to your preferred method
  deployMethod: 'appservice'  # Options: 'kubernetes', 'ssh', 'appservice'

stages:
- stage: Build
  displayName: 'Build and Test'
  jobs:
  - job: Build
    displayName: 'Build React App'
    pool:
      name: 'Default'
    
    steps:
    - task: NodeTool@0
      inputs:
        versionSpec: $(nodeVersion)
      displayName: 'Install Node.js'
    
    - script: |
        cd coffee-brain
        npm install
      displayName: 'Install Dependencies'
    
    - script: |
        cd coffee-brain
        npm run build
      displayName: 'Build React App'
    
    - task: PublishBuildArtifacts@1
      inputs:
        pathToPublish: 'coffee-brain/build'
        artifactName: 'drop'
      displayName: 'Publish Build Artifacts'

- stage: Docker
  displayName: 'Build Docker Image'
  dependsOn: Build
  condition: eq(variables['deployMethod'], 'kubernetes')
  jobs:
  - job: DockerBuild
    displayName: 'Build and Push Docker Image'
    pool:
      name: 'Default'
    
    steps:
    - script: |
        docker build -t $(imageName):$(imageTag) -t $(imageName):latest -f coffee-brain/$(dockerfilePath) coffee-brain/
      displayName: 'Build Docker image'
    
    - script: |
        docker push $(imageName):$(imageTag)
        docker push $(imageName):latest
      displayName: 'Push Docker images'

- stage: Deploy
  displayName: 'Deploy to Kubernetes'
  dependsOn: Docker
  condition: eq(variables['deployMethod'], 'kubernetes')
  jobs:
  - job: DeployToK8s
    displayName: 'Deploy to Kubernetes'
    pool:
      name: 'Default'
    
    steps:
    - script: |
        # Deploy to Kubernetes
        echo "Starting deployment process..."
        
        # Create namespace first
        kubectl apply -f coffee-brain/k8s/namespace.yaml
        
        # Deploy the application
        kubectl apply -f coffee-brain/k8s/deployment.yaml
        kubectl apply -f coffee-brain/k8s/service.yaml
        kubectl apply -f coffee-brain/k8s/ingress.yaml
        
        # Wait for deployment
        kubectl rollout status deployment/coffee-brain -n $(k8sNamespace) --timeout=300s
      displayName: 'Deploy to Kubernetes'

# Alternative: Deploy via SSH to Ubuntu server
- stage: DeploySSH
  displayName: 'Deploy via SSH (Alternative)'
  dependsOn: Build
  condition: eq(variables['deployMethod'], 'ssh')
  jobs:
  - job: DeployViaSSH
    displayName: 'Deploy to Ubuntu Server via SSH'
    pool:
      name: 'Default'
    
    steps:
    - script: |
        # Pull the latest image
        docker pull $(imageName):$(imageTag)
        
        # Stop and remove existing container
        docker stop coffee-brain || true
        docker rm coffee-brain || true
        
        # Run new container
        docker run -d \
          --name coffee-brain \
          --restart unless-stopped \
          -p 80:80 \
          $(imageName):$(imageTag)
        
        # Clean up old images
        docker image prune -f
      displayName: 'Deploy via SSH'

# Alternative: Deploy to Azure App Service
- stage: DeployAppService
  displayName: 'Deploy to Azure App Service'
  dependsOn: Build
  condition: eq(variables['deployMethod'], 'appservice')
  jobs:
  - job: DeployToAppService
    displayName: 'Deploy to Azure App Service'
    pool:
      name: 'Default'
    
    steps:
    - script: |
        # Create deployment package
        cd coffee-brain/build
        zip -r ../coffee-brain-$(Build.BuildId).zip .
        cd ..
      displayName: 'Create deployment package'
    
    - script: |
        # Deploy to Azure App Service
        az webapp deployment source config-zip \
          --resource-group your-resource-group \
          --name your-app-service-name \
          --src coffee-brain/coffee-brain-$(Build.BuildId).zip
      displayName: 'Deploy to Azure App Service' 