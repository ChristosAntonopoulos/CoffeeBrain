trigger:
  - main

pool:
  vmImage: 'ubuntu-latest'

variables:
  # Build variables
  buildConfiguration: 'Release'
  nodeVersion: '18.x'
  
  # Docker variables
  dockerfilePath: 'Dockerfile'
  imageName: 'coffee-brain'
  imageTag: '$(Build.BuildId)'
  
  # Kubernetes variables
  k8sNamespace: 'coffee-brain'
  k8sConfigPath: 'k8s/'
  
  # Server variables (replace with your actual values)
  serverHost: 'your-ubuntu-server.com'
  serverUser: 'ubuntu'
  serverKeyPath: '$(System.DefaultWorkingDirectory)/ssh-key'

stages:
- stage: Build
  displayName: 'Build and Test'
  jobs:
  - job: Build
    displayName: 'Build React App'
    steps:
    - task: NodeTool@0
      inputs:
        versionSpec: $(nodeVersion)
      displayName: 'Install Node.js'
    
    - script: |
        npm install
      displayName: 'Install Dependencies'
    
    - script: |
        npm run build
      displayName: 'Build React App'
    
    - task: PublishBuildArtifacts@1
      inputs:
        pathToPublish: 'build'
        artifactName: 'drop'
      displayName: 'Publish Build Artifacts'

- stage: Docker
  displayName: 'Build Docker Image'
  dependsOn: Build
  jobs:
  - job: DockerBuild
    displayName: 'Build and Push Docker Image'
    steps:
    - task: Docker@2
      inputs:
        containerRegistry: 'your-acr-connection' # Replace with your ACR connection
        repository: $(imageName)
        command: 'buildAndPush'
        Dockerfile: $(dockerfilePath)
        tags: |
          $(imageTag)
          latest
      displayName: 'Build and Push Docker Image'

- stage: Deploy
  displayName: 'Deploy to Kubernetes'
  dependsOn: Docker
  jobs:
  - deployment: DeployToK8s
    displayName: 'Deploy to Kubernetes'
    environment: 'production' # Replace with your environment name
    strategy:
      runOnce:
        deploy:
          steps:
          - task: KubernetesManifest@0
            inputs:
              action: 'deploy'
              kubernetesServiceConnection: 'your-k8s-connection' # Replace with your K8s connection
              namespace: $(k8sNamespace)
              manifests: |
                $(Pipeline.Workspace)/k8s/deployment.yaml
                $(Pipeline.Workspace)/k8s/service.yaml
                $(Pipeline.Workspace)/k8s/ingress.yaml
              containers: |
                $(imageName):$(imageTag)
            displayName: 'Deploy to Kubernetes'

          - task: Kubernetes@1
            inputs:
              connectionType: 'Azure Resource Manager'
              azureSubscriptionEndpoint: 'your-azure-subscription' # Replace with your Azure subscription
              azureContainerRegistry: 'your-acr-connection' # Replace with your ACR connection
              kubernetesCluster: 'your-aks-cluster' # Replace with your AKS cluster
              namespace: $(k8sNamespace)
              command: 'set image'
              arguments: 'deployment/coffee-brain coffee-brain=$(imageName):$(imageTag)'
            displayName: 'Update Image Tag'

# Alternative deployment using SSH if you're deploying to a self-hosted Kubernetes cluster
- stage: DeploySSH
  displayName: 'Deploy via SSH (Alternative)'
  dependsOn: Docker
  condition: and(succeeded(), eq(variables['deployMethod'], 'ssh'))
  jobs:
  - job: DeployViaSSH
    displayName: 'Deploy via SSH'
    steps:
    - task: CopyFiles@2
      inputs:
        sourceFolder: '$(Pipeline.Workspace)/k8s'
        contents: '**'
        targetFolder: '$(Build.ArtifactStagingDirectory)/k8s'
      displayName: 'Copy K8s Manifests'
    
    - task: PublishBuildArtifacts@1
      inputs:
        pathToPublish: '$(Build.ArtifactStagingDirectory)/k8s'
        artifactName: 'k8s-manifests'
      displayName: 'Publish K8s Manifests'
    
    - task: SSH@0
      inputs:
        sshEndpoint: 'your-ssh-endpoint' # Replace with your SSH service connection
        runOptions: 'commands'
        commands: |
          # Update the deployment with new image
          kubectl set image deployment/coffee-brain coffee-brain=$(imageName):$(imageTag) -n $(k8sNamespace)
          
          # Apply any config changes
          kubectl apply -f k8s/ -n $(k8sNamespace)
          
          # Check deployment status
          kubectl rollout status deployment/coffee-brain -n $(k8sNamespace)
        displayName: 'Deploy via SSH'

# Post-deployment verification
- stage: Verify
  displayName: 'Verify Deployment'
  dependsOn: Deploy
  jobs:
  - job: VerifyDeployment
    displayName: 'Verify Deployment'
    steps:
    - task: Kubernetes@1
      inputs:
        connectionType: 'Azure Resource Manager'
        azureSubscriptionEndpoint: 'your-azure-subscription'
        kubernetesCluster: 'your-aks-cluster'
        namespace: $(k8sNamespace)
        command: 'get'
        arguments: 'pods -l app=coffee-brain'
      displayName: 'Check Pod Status'
    
    - task: Kubernetes@1
      inputs:
        connectionType: 'Azure Resource Manager'
        azureSubscriptionEndpoint: 'your-azure-subscription'
        kubernetesCluster: 'your-aks-cluster'
        namespace: $(k8sNamespace)
        command: 'get'
        arguments: 'services -l app=coffee-brain'
      displayName: 'Check Service Status' 